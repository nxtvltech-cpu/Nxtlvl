{%- comment -%}
  NXTLVL Gaming Product Template
{%- endcomment -%}

{%- assign current_variant = product.selected_or_first_available_variant -%}
{%- assign featured_image = current_variant.featured_image | default: product.featured_image -%}

<div class="product-page">
  <div class="container">
    <div class="product-grid-layout">
      {%- comment -%} Product Images with Auto-Sliding Carousel {%- endcomment -%}
      <div class="product-media">
        <div class="product-gallery-slider" data-product-detail-slider>
          {%- if product.media.size > 0 -%}
            <div class="gallery-main-slider">
              <div class="slides">
                {%- for media in product.media -%}
                  <div class="slide {% if forloop.first %}active{% endif %}">
                    <img 
                      src="{{ media | img_url: '800x800' }}"
                      alt="{{ media.alt | default: product.title | escape }}"
                      width="800"
                      height="800"
                    >
                  </div>
                {%- endfor -%}
              </div>
              
              {%- if product.media.size > 1 -%}
                <button type="button" class="gallery-arrow prev" aria-label="Previous image">
                  <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polyline points="15,18 9,12 15,6"/>
                  </svg>
                </button>
                <button type="button" class="gallery-arrow next" aria-label="Next image">
                  <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polyline points="9,18 15,12 9,6"/>
                  </svg>
                </button>
                
                <div class="gallery-counter">
                  <span class="current-slide">1</span> / <span class="total-slides">{{ product.media.size }}</span>
                </div>
              {%- endif -%}
            </div>
            
            {%- if product.media.size > 1 -%}
              <div class="gallery-thumbnails">
                {%- for media in product.media -%}
                  <button 
                    type="button"
                    class="thumbnail {% if forloop.first %}active{% endif %}"
                    data-slide-index="{{ forloop.index0 }}"
                  >
                    <img 
                      src="{{ media | img_url: '100x100' }}"
                      alt="{{ media.alt | default: product.title | escape }}"
                      width="100"
                      height="100"
                      loading="lazy"
                    >
                  </button>
                {%- endfor -%}
              </div>
            {%- endif -%}
          {%- endif -%}
        </div>
        
        {%- comment -%} Product Badges with Discount {%- endcomment -%}
        <div class="product-detail-badges">
          {%- comment -%} Generate random discount between 10-40% {%- endcomment -%}
          {%- assign discount_base = product.id | modulo: 4 -%}
          {%- assign discount_percent = 10 | plus: discount_base | times: 10 -%}
          <span class="badge sale-badge-lg">üî• {{ discount_percent }}% OFF</span>
          <span class="badge sale-text-lg">FLASH SALE</span>
          
          {%- comment -%} Limited Time Badge {%- endcomment -%}
          {%- assign show_limited = product.id | modulo: 2 -%}
          {%- if show_limited == 0 -%}
            <span class="badge limited-badge-lg">‚è∞ LIMITED TIME ONLY</span>
          {%- endif -%}
        </div>
      </div>
      
      {%- comment -%} Product Information {%- endcomment -%}
      <div class="product-info">
        {%- if product.vendor != blank -%}
          <div class="product-brand">{{ product.vendor }}</div>
        {%- endif -%}
        
        <h1 class="product-title">{{ product.title }}</h1>
        
        {%- comment -%} Product Rating {%- endcomment -%}
        <div class="product-rating">
          <div class="stars">
            <span class="star filled">‚òÖ</span>
            <span class="star filled">‚òÖ</span>
            <span class="star filled">‚òÖ</span>
            <span class="star filled">‚òÖ</span>
            <span class="star">‚òÜ</span>
          </div>
          <span class="rating-text">({{ 25 | plus: product.id | modulo: 100 }} reviews)</span>
        </div>
        
        {%- comment -%} Product Price with Discount {%- endcomment -%}
        <div class="product-price-detail">
          {%- comment -%} Calculate discount {%- endcomment -%}
          {%- assign discount_base = product.id | modulo: 4 -%}
          {%- assign discount_percent = 10 | plus: discount_base | times: 10 -%}
          
          <div class="price-row">
            <span class="current-price-lg" id="product-price">
              {{ current_variant.price | money }}
            </span>
            <span class="original-price-lg" id="product-compare-price">
              {%- assign fake_original = current_variant.price | times: 100 | plus: current_variant.price | times: discount_percent | divided_by: 100 | divided_by: 100 -%}
              ${{ fake_original | times: 1.3 | round: 2 }}
            </span>
          </div>
          <div class="savings-info">
            <span class="you-save">You Save: ${{ fake_original | times: 1.3 | minus: current_variant.price | divided_by: 100 | round: 2 }}</span>
            <span class="discount-percent-lg">(-{{ discount_percent }}%)</span>
          </div>
        </div>
        
        {%- comment -%} Product Form {%- endcomment -%}
        <form action="/cart/add" method="post" enctype="multipart/form-data" class="product-form">
          {%- comment -%} Add to Cart Button {%- endcomment -%}
          <div class="product-actions">
            <div class="quantity-selector">
              <label for="quantity">Quantity</label>
              <div class="quantity-input">
                <button type="button" class="quantity-btn minus">‚àí</button>
                <input type="number" name="quantity" id="quantity" value="1" min="1" class="quantity-number">
                <button type="button" class="quantity-btn plus">+</button>
              </div>
            </div>
            
            <button 
              type="submit" 
              name="add" 
              class="add-to-cart-btn btn-primary"
              {%- if current_variant.available == false %} disabled{%- endif -%}
            >
              <span class="btn-text">
                {%- if current_variant.available -%}
                  Add to Cart - {{ current_variant.price | money }}
                {%- else -%}
                  Sold Out
                {%- endif -%}
              </span>
            </button>
            
            <input type="hidden" name="id" value="{{ current_variant.id }}">
          </div>
        </form>
        
        {%- comment -%} Delivery Estimator {%- endcomment -%}
        {% render 'delivery-estimator', product: product %}
        
        {%- comment -%} Product Description {%- endcomment -%}
        <div class="product-description">
          {{ product.description }}
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.product-page {
  padding: 2rem 0;
  margin-top: 110px;
}

.product-grid-layout {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 4rem;
  margin-bottom: 4rem;
}

.product-gallery-slider {
  position: sticky;
  top: 2rem;
}

.gallery-main-slider {
  position: relative;
  margin-bottom: 1rem;
  border-radius: 12px;
  overflow: hidden;
  background: rgba(255, 255, 255, 0.02);
  height: 500px;
}

.gallery-main-slider .slides {
  width: 100%;
  height: 100%;
  position: relative;
}

.gallery-main-slider .slide {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: opacity 0.6s ease-in-out;
}

.gallery-main-slider .slide.active {
  opacity: 1;
  z-index: 1;
}

.gallery-main-slider .slide img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.gallery-arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(0, 0, 0, 0.8);
  border: 2px solid var(--nx-green);
  color: var(--nx-green);
  width: 48px;
  height: 48px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 10;
  transition: all 0.3s ease;
  backdrop-filter: blur(8px);
}

.gallery-arrow:hover {
  background: var(--nx-green);
  color: var(--bg);
  transform: translateY(-50%) scale(1.1);
}

.gallery-arrow.prev {
  left: 1rem;
}

.gallery-arrow.next {
  right: 1rem;
}

.gallery-counter {
  position: absolute;
  bottom: 1rem;
  right: 1rem;
  background: rgba(0, 0, 0, 0.8);
  color: var(--nx-green);
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-weight: 600;
  font-size: 0.9rem;
  z-index: 10;
  backdrop-filter: blur(8px);
  border: 1px solid var(--nx-green);
}

.gallery-thumbnails {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.thumbnail {
  width: 80px;
  height: 80px;
  border: 2px solid var(--border);
  border-radius: 8px;
  overflow: hidden;
  cursor: pointer;
  transition: all 0.3s ease;
  background: none;
  padding: 0;
}

.thumbnail:hover,
.thumbnail.active {
  border-color: var(--nx-green);
  box-shadow: 0 0 12px rgba(0, 255, 133, 0.4);
}

.thumbnail img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.product-detail-badges {
  position: absolute;
  top: 1rem;
  left: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  z-index: 5;
}

.badge {
  padding: 0.5rem 1.2rem;
  border-radius: 25px;
  font-size: 0.85rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4);
  width: fit-content;
}

.badge.sale-badge-lg {
  background: linear-gradient(135deg, #FF3366, #FF0044);
  color: #FFFFFF;
  font-size: 1.1rem;
  padding: 0.6rem 1.5rem;
  animation: badge-pulse-lg 2s ease-in-out infinite;
}

.badge.sale-text-lg {
  background: var(--nx-green);
  color: var(--bg);
  font-size: 0.9rem;
}

.badge.limited-badge-lg {
  background: linear-gradient(135deg, var(--nx-purple), #B048FF);
  color: #FFFFFF;
  font-size: 0.8rem;
  animation: badge-pulse-lg 1.5s ease-in-out infinite;
}

@keyframes badge-pulse-lg {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 6px 24px rgba(255, 51, 102, 0.6);
  }
}

.product-info {
  padding-left: 2rem;
}

.product-brand {
  color: var(--nx-green);
  font-size: 0.9rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.product-title {
  font-size: 2rem;
  font-weight: 700;
  color: var(--text);
  margin-bottom: 1rem;
  line-height: 1.3;
}

.product-rating {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1.5rem;
}

.stars {
  display: flex;
  gap: 0.125rem;
}

.star {
  color: #333;
  font-size: 1.1rem;
}

.star.filled {
  color: #FFD700;
}

.product-price-detail {
  margin-bottom: 2rem;
  padding: 1.5rem;
  background: rgba(0, 255, 133, 0.05);
  border: 2px solid var(--nx-green);
  border-radius: 12px;
}

.price-row {
  display: flex;
  align-items: center;
  gap: 1.5rem;
  margin-bottom: 0.75rem;
}

.current-price-lg {
  font-size: 2.5rem;
  font-weight: 700;
  color: var(--nx-green);
  position: relative;
}

.current-price-lg::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 0;
  width: 100%;
  height: 4px;
  background: linear-gradient(90deg, var(--nx-green), var(--nx-purple));
  animation: price-shimmer 2s ease-in-out infinite;
}

.original-price-lg {
  font-size: 1.5rem;
  color: #666;
  text-decoration: line-through;
  font-weight: 500;
}

.savings-info {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.you-save {
  color: #FF3366;
  font-size: 1.1rem;
  font-weight: 700;
}

.discount-percent-lg {
  background: linear-gradient(135deg, #FF3366, #FF0044);
  color: #FFFFFF;
  padding: 0.4rem 1rem;
  border-radius: 20px;
  font-size: 0.9rem;
  font-weight: 700;
  animation: discount-glow 2s ease-in-out infinite;
}

@keyframes discount-glow {
  0%, 100% {
    box-shadow: 0 0 12px rgba(255, 51, 102, 0.4);
  }
  50% {
    box-shadow: 0 0 24px rgba(255, 51, 102, 0.8);
  }
}

.product-actions {
  display: flex;
  gap: 1rem;
  align-items: end;
  margin-bottom: 2rem;
}

.quantity-selector {
  flex: 0 0 120px;
}

.quantity-selector label {
  display: block;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.quantity-input {
  display: flex;
  border: 1px solid var(--border);
  border-radius: 8px;
  overflow: hidden;
}

.quantity-btn {
  background: var(--card-bg);
  border: none;
  color: var(--text);
  padding: 0.75rem;
  cursor: pointer;
  transition: all 0.3s ease;
}

.quantity-btn:hover {
  background: var(--nx-green);
  color: var(--bg);
}

.quantity-number {
  background: var(--card-bg);
  border: none;
  color: var(--text);
  padding: 0.75rem;
  text-align: center;
  width: 60px;
  outline: none;
}

.add-to-cart-btn {
  flex: 1;
  padding: 1rem 2rem;
  font-size: 1.1rem;
  font-weight: 600;
}

.product-description {
  color: var(--text);
  line-height: 1.6;
  margin-top: 2rem;
}

@keyframes price-shimmer {
  0%, 100% { opacity: 1; transform: scaleX(1); }
  50% { opacity: 0.7; transform: scaleX(1.05); }
}

@media (max-width: 768px) {
  .product-grid-layout {
    grid-template-columns: 1fr;
    gap: 2rem;
  }
  
  .product-info {
    padding-left: 0;
  }
  
  .product-title {
    font-size: 1.5rem;
  }
  
  .product-actions {
    flex-direction: column;
    align-items: stretch;
  }
  
  .quantity-selector {
    flex: none;
  }
  
  .gallery-main-slider {
    height: 350px;
  }
  
  .gallery-arrow {
    width: 40px;
    height: 40px;
  }
  
  .current-price-lg {
    font-size: 2rem;
  }
  
  .original-price-lg {
    font-size: 1.2rem;
  }
  
  .badge.sale-badge-lg {
    font-size: 0.9rem;
    padding: 0.5rem 1rem;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Product Detail Gallery Slider with Auto-play
  const detailSlider = document.querySelector('[data-product-detail-slider]');
  
  if (detailSlider) {
    const slides = detailSlider.querySelectorAll('.slide');
    const thumbnails = detailSlider.querySelectorAll('.thumbnail');
    const prevBtn = detailSlider.querySelector('.gallery-arrow.prev');
    const nextBtn = detailSlider.querySelector('.gallery-arrow.next');
    const currentSlideEl = detailSlider.querySelector('.current-slide');
    const totalSlidesEl = detailSlider.querySelector('.total-slides');
    
    let currentSlide = 0;
    let autoplayInterval;
    
    function showSlide(index) {
      slides.forEach(s => s.classList.remove('active'));
      thumbnails.forEach(t => t.classList.remove('active'));
      
      if (slides[index]) slides[index].classList.add('active');
      if (thumbnails[index]) thumbnails[index].classList.add('active');
      
      if (currentSlideEl) currentSlideEl.textContent = index + 1;
      
      currentSlide = index;
    }
    
    function nextSlide() {
      let next = (currentSlide + 1) % slides.length;
      showSlide(next);
    }
    
    function prevSlide() {
      let prev = (currentSlide - 1 + slides.length) % slides.length;
      showSlide(prev);
    }
    
    function startAutoplay() {
      if (slides.length > 1) {
        autoplayInterval = setInterval(nextSlide, 4000); // Change every 4 seconds
      }
    }
    
    function stopAutoplay() {
      clearInterval(autoplayInterval);
    }
    
    // Next button
    if (nextBtn) {
      nextBtn.addEventListener('click', () => {
        stopAutoplay();
        nextSlide();
        startAutoplay();
      });
    }
    
    // Previous button
    if (prevBtn) {
      prevBtn.addEventListener('click', () => {
        stopAutoplay();
        prevSlide();
        startAutoplay();
      });
    }
    
    // Thumbnail navigation
    thumbnails.forEach((thumbnail, index) => {
      thumbnail.addEventListener('click', () => {
        stopAutoplay();
        showSlide(index);
        startAutoplay();
      });
    });
    
    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') {
        stopAutoplay();
        prevSlide();
        startAutoplay();
      } else if (e.key === 'ArrowRight') {
        stopAutoplay();
        nextSlide();
        startAutoplay();
      }
    });
    
    // Pause autoplay on hover
    detailSlider.addEventListener('mouseenter', stopAutoplay);
    detailSlider.addEventListener('mouseleave', startAutoplay);
    
    // Start autoplay
    startAutoplay();
  }
  
  // Quantity buttons
  const minusBtn = document.querySelector('.quantity-btn.minus');
  const plusBtn = document.querySelector('.quantity-btn.plus');
  const quantityInput = document.getElementById('quantity');
  
  if (minusBtn && quantityInput) {
    minusBtn.addEventListener('click', function() {
      let currentValue = parseInt(quantityInput.value) || 1;
      if (currentValue > 1) {
        quantityInput.value = currentValue - 1;
      }
    });
  }
  
  if (plusBtn && quantityInput) {
    plusBtn.addEventListener('click', function() {
      let currentValue = parseInt(quantityInput.value) || 1;
      quantityInput.value = currentValue + 1;
    });
  }
});
</script>